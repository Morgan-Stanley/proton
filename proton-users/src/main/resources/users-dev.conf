akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  stdout-loglevel = "DEBUG"

  extensions = [
    "akka.cluster.pubsub.DistributedPubSub",
    "com.romix.akka.serialization.kryo.KryoSerializationExtension$"
  ]

  persistence {
    journal.plugin = "inmemory-journal"
    snapshot-store.plugin = "inmemory-snapshot-store"
  }

  remote {
    netty.tcp {
      hostname = ${proton.ip}
      port = ${proton.port}
    }
  }

  cluster {
    seed-nodes = ["akka.tcp://ProtonUsers@"${proton.ip}":"${proton.port}]
  }

  actor {
    provider = "akka.cluster.ClusterActorRefProvider"

    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "com.romix.akka.serialization.kryo.KryoSerializer"
    }

    serialization-bindings {
      "java.io.Serializable" = kryo
    }

    kryo {
      implicit-registration-logging = true
      post-serialization-transformations = off
      kryo-custom-serializer-init = "proton.users.UsersKryoSerializerInit"
    }
  }
}

proton {
  ip = "127.0.0.1"
  port = 2552
  port = ${?PORT_2552}
  http.timeout = 55 seconds
  cluster.shards = 10

  users.http {
    port = 8081
    port = ${?PORT_8081}
  }
}